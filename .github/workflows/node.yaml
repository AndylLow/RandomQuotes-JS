jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: '0'
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1.1.1
      with:
        version: latest
    - name: Install Dependencies
      run: npm install
      shell: bash
    - name: List Dependencies
      run: npm list --all > dependencies.txt
      shell: bash
    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dependencies.txt
    - name: List Dependency Updates
      run: npm outdated > dependencieupdates.txt || true
      shell: bash
    - name: Collect Dependency Updates
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies Updates
        path: dependencyUpdates.txt
    - name: Test
      run: npm test || true
      shell: bash
    - name: Build
      run: npm run build
      shell: bash
    - name: Package
      run: |-
        SOURCEPATH=.
        OUTPUTPATH=.
        if [[ -d "build" ]]; then
          SOURCEPATH=build
          OUTPUTPATH=...
        fi
        octo pack --basePath ${SOURCEPATH} --outFolder ${OUTPUTPATH} --id RandomQuotes-JS --version ${{ steps.determine_version.outputs.semVer }} --format zip --overwrite --include **/*.html --include **/*.htm --include **/*.css --include **/*.js --include **/*.min --include **/*.map --include **/*.sql --include **/*.png --include **/*.jpg --include **/*.jpeg --include **/*.gif --include **/*.json --include **/*.env --include **/*.txt --include **/*.Procfile
      shell: bash
    - id: get_artifact
      name: Get Artifact Path
      run: '"::set-output name=artifact::RandomQuotes-JS.${{ steps.determine_version.outputs.semVer }}.zip"'
      shell: bash
    - id: get_artifact_name
      name: Get Artifact Name
      run: echo "::set-output name=artifact::RandomQuotes-JS.${{ steps.determine_version.outputs.semVer }}.zip"
      shell: bash
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.determine_version.outputs.semVer }}
        release_name: Release ${{ steps.determine_version.outputs.semVer }}
        draft: 'false'
        prerelease: 'false'
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_artifact.outputs.artifact }}
        asset_name: ${{ steps.get_artifact_name.outputs.artifact }}
        asset_content_type: application/octet-stream
    - name: Push to Octopus
      uses: OctopusDeploy/push-package-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        packages: ${{ steps.get_octopus_artifact.outputs.artifact }}
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
    - name: Generate Octopus Deploy build information
      uses: xo-energy/action-octopus-build-information@v1.1.2
      with:
        octopus_api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        octopus_project: RandomQuotes-JS
        octopus_server: ${{ secrets.OCTOPUS_SERVER_URL }}
        push_version: ${{ steps.determine_version.outputs.semVer }}
        push_package_ids: RandomQuotes-JS
        output_path: octopus
    - name: Create Octopus Release
      uses: OctopusDeploy/create-release-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        project: RandomQuotes-JS
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
        deploy_to: Development
name: Node.js Build
'on':
  workflow_dispatch: {}
  push: {}
